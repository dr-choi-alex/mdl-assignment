openapi: 3.0.2
info:
  description: Shopping Mall Demo
  title: MDL Assignment
  version: "1.0"
servers:
- url: http://localhost:5000/#/
paths:
  /products:
    description: Product Information
    get:
      description: Get Products Information
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/products'
          description: Success Resopnse
      summary: Get the products in the store / main page
      tags:
      - products
    post:
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            schema:
              properties:
                ObjectID:
                  title: ObjectID
                  type: string
                ProductName:
                  title: ProductName
                  type: string
                Price:
                  title: Price
                  type: integer
                Image:
                  title: Image
                  type: string
              title: inline_object
              type: object
        description: Add data to DB by sending product information.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                example: Successfully added product.
                type: string
          description: Success Resopnse with path param
        "400":
          content:
            application/json:
              schema:
                example: Failed to add product.
                type: string
          description: Fail Resopnse with path param
      summary: Add a new product to the store
      tags:
      - products
  /users:
    description: Add data to DB by sending user information.
    post:
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/json:
            schema:
              properties:
                UserName:
                  title: UserName
                  type: string
                UserID:
                  title: UserID
                  type: string
                Password:
                  title: Password
                  type: string
                E-Mail:
                  title: E-Mail
                  type: string
              title: inline_object_1
              type: object
        description: Add data to DB by sending user information.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                example: Alert Success to register.
                type: string
          description: Success Resopnse with path param
        "400":
          content:
            application/json:
              schema:
                example: 400 error. Fail to register.
                type: string
          description: Fail Resopnse with path param
      summary: Create User
      tags:
      - users

  /users/{userId}:
    description: User information
    get:
      parameters:
      - description: The id of the user to retrieve
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: Success Resopnse
      summary: Get the user detail information
      tags:
      - users

  /users/{userId}/Carts:
    description: the user cart information
    get:
      parameters:
      - description: Reads and displays user's cart information.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  Carts:
                    $ref: '#/components/schemas/carts'
                  Products:
                    $ref: '#/components/schemas/products'

          description: Success Resopnse
      summary: Get the user's cart items
      tags:
      - users

    post:
      parameters:
      - description: Reads and displays user's cart information.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_cartitem'
        description: Add data to DB by sending user information.
        required: true
      responses:
        "200":
          description: Success Resopnse with path param
        "400":
          content:
            application/json:
              schema:
                example: Fail to change data.
                type: string
          description: Fail Resopnse with path param
      summary: add the user's cart item
      tags:
      - users

    delete:
      parameters:
      - description: Reads and displays user's cart information.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ProductID:
                  type: integer
      responses:
        "200":
          description: Success Resopnse with path param
        "400":
          content:
            application/json:
              schema:
                example: Fail to change data.
                type: string
          description: Fail Resopnse with path param
      summary: delete the user's cart item
      tags:
      - users

  /signin:
    description: Send the user's id and password to find out appropriate DB data.
    post:
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          application/json:
            schema:
              properties:
                UserID:
                  title: UserID
                  type: string
                Password:
                  title: Password
                  type: string
              title: inline_object_2
              type: object
        description: Send the user's id and password to find out appropriate DB data.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  UserID:
                    type: string
          description: Success Resopnse with path param
        "400":
          content:
            application/json:
              schema:
                example: Fail to Log-in.
                type: string
          description: Fail to Log-in.
      summary: Login User
      tags:
      - sign
  /signout:
    description: Add data to DB by sending user information.
    post:
      requestBody:
        $ref: '#/components/requestBodies/inline_object_3'
        content:
          application/json:
            schema:
              properties:
                UserName:
                  title: UserName
                  type: string
                UserID:
                  title: UserID
                  type: string
                Password:
                  title: Password
                  type: string
                E-Mail:
                  title: E-Mail
                  type: string
              title: inline_object_3
              type: object
        description: Add data to DB by sending user information.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                example: Alert Success to register.
                type: string
          description: Success Resopnse with path param
        "400":
          content:
            application/json:
              schema:
                example: 400 error. Fail to register.
                type: string
          description: Fail Resopnse with path param
      summary: Logout User
      tags:
      - sign
  /signup:
    description: Add data to DB by sending user information.
    post:
      requestBody:
        $ref: '#/components/requestBodies/inline_object_4'
        content:
          application/json:
            schema:
              properties:
                UserName:
                  title: UserName
                  type: string
                UserID:
                  title: UserID
                  type: string
                Password:
                  title: Password
                  type: string
                E-Mail:
                  title: E-Mail
                  type: string
              title: inline_object_4
              type: object
        description: Add data to DB by sending user information.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                example: Alert Success to register.
                type: string
          description: Success Resopnse with path param
        "400":
          content:
            application/json:
              schema:
                example: 400 error. Fail to register.
                type: string
          description: Fail Resopnse with path param
      summary: Logout User
      tags:
      - sign

components:
  requestBodies:
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
      required: true
    inline_object_2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_2'
      required: true
    inline_object_3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_3'
      required: true
    inline_object_4:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_4'
      required: true
    inline_cartitem:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_cartitem'
      required: true
    
  schemas:
    products:
      example:
      - ObjectID: 3
        ProductName: car1
        Price: 1000
        ImagePath: C:\Users\jusong\Desktop\car.jpg
      - ObjectID: 4
        ProductName: car2
        Price: 2000
        ImagePath: C:\Users\jusong\Desktop\car2.jpg
      items:
        $ref: '#/components/schemas/product'
      type: array
    user:
      example:
        UserName: Test
        Email: TestUser@test.com
        UserID: TestUser
        UserType: Seller
      properties:
        UserType:
          example: Seller
          title: UserType
          type: string
        UserName:
          example: Test
          title: UserName
          type: string
        UserID:
          example: TestUser
          title: UserID
          type: string
        Email:
          example: TestUser@test.com
          title: Email
          type: string
      title: user
      type: object
    carts:
      example:
      - ProductID: 3
        Quantity: 5
      - ProductID: 4
        Quantity: 10
      items:
        properties:
          ProductID:
            example: 1
            type: integer
          Quantity:
            example: 5
            type: integer
        type: object
      type: array
    product:
      properties:
        ObjectID:
          example: 1
          title: ObjectID
          type: integer
        ProductName:
          example: car
          title: ProductName
          type: string
        Price:
          example: 2000
          title: Price
          type: integer
        ImageUrl:
          example: /car2.jpg
          title: ImageUrl
          type: string
      title: product
      type: object
    inline_object:
      properties:
        ObjectID:
          title: ObjectID
          type: string
        ProductName:
          title: ProductName
          type: string
        Price:
          title: Price
          type: integer
        Image:
          title: Image
          type: string
      title: inline_object
      type: object
    inline_object_1:
      properties:
        UserName:
          title: UserName
          type: string
        UserID:
          title: UserID
          type: string
        Password:
          title: Password
          type: string
        E-Mail:
          title: E-Mail
          type: string
      title: inline_object_1
      type: object
    inline_object_2:
      properties:
        UserID:
          title: UserID
          type: string
        Password:
          title: Password
          type: string
      title: inline_object_2
      type: object
    inline_object_3:
      properties:
        UserName:
          title: UserName
          type: string
        UserID:
          title: UserID
          type: string
        Password:
          title: Password
          type: string
        E-Mail:
          title: E-Mail
          type: string
      title: inline_object_3
      type: object
    inline_object_4:
      properties:
        UserName:
          title: UserName
          type: string
        UserID:
          title: UserID
          type: string
        Password:
          title: Password
          type: string
        E-Mail:
          title: E-Mail
          type: string
      title: inline_object_4
      type: object
    inline_cartitem:
      properties:
        ProductID:
          type: integer
        Quantity:
          type: integer

