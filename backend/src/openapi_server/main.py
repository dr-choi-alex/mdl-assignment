# coding: utf-8

"""
    MDL Assignment

    Shopping Mall Demo

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware

from apis.products_api import router as ProductsApiRouter
from apis.sign_api import router as SignApiRouter
from apis.users_api import router as UsersApiRouter
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
import psycopg2

# Postgresql 연동
db = psycopg2.connect(host='10.99.80.67', dbname='postgres',user='testuser',password='1234',port=5432)
cursor=db.cursor()

def execute(self,query,args={}):
    self.cursor.execute(query,args)
    row = self.cursor.fetchall()
    return row

def insertDB(schema,table,colum,data):
    sql = " INSERT INTO {schema}.{table}({colum}) VALUES ('{data}') ;".format(schema=schema,table=table,colum=colum,data=data)
    try:
        cursor.execute(sql)
        db.commit()
    except Exception as e :
        print(" insert DB  ",e) 
        
def readDB(table,colum):
    sql = " SELECT {colum} from {table}".format(colum=colum,table=table)
    try:
        cursor.execute(sql)
        result = cursor.fetchall()
    except Exception as e :
        result = (" read DB err",e)
    
    return result

app = FastAPI(
    title="MDL Assignment",
    description="Shopping Mall Demo",
    version="1.0",
)
origins = [
    "http://localhost",
    "http://localhost:4200",
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

app.include_router(ProductsApiRouter)
app.include_router(SignApiRouter)
app.include_router(UsersApiRouter)


# 준석 sample code
class User(BaseModel):
    userID: str
    password: str
    
class Register(BaseModel):
    usertype : str
    username: str
    userID : str
    password : str
    email : str

@app.post('/login')
def login(user: User):
    userID = user.userID
    password = user.password
    
    print(readDB(table="users",colum="login_id, password"))
       
    return "login Successed"

@app.post('/register')
def register(user : Register):
    usertype = user.usertype
    username = user.username
    userID = user.userID
    password = user.password
    email = user.email
    
    return "register Succeessed"