openapi: '3.0.2'
info:
  title: MDL Assignment
  description: Shopping Mall Demo
  version: '1.0'
servers:
  - url: http://localhost:4200/#/
paths:
  /product:
    description: Product Information
    get:
      summary: Get the products in the store / main page
      tags:
        - product
      description: Get Product Information
           
      responses:
        '200':
          description: Success Resopnse
          content:
            application/json:
              schema:
                properties:
                  UserId:
                    type: object
                    $ref: './components/user.yaml'
                  Product:
                    type: object
                    $ref: './components/product.yaml'
    post:
      tags:
        - product
      summary: Add a new product to the store
      parameters:
        - in: query
          description: Add data to DB by sending product information.
          name: parameters
          required: true
          schema:
            type: object
            properties:
              ObjectID:
                type: string
              ProductName:
                type: string
              Price:
                type: integer
              ImagePath:
                type: string
         
          
      responses:
        '201':
          description: Success Resopnse with path param
          content:
            application/json:
              schema:
                type: string
                example : Successfully added product.
                

        '400':
          description: Fail Resopnse with path param
          content:
            application/json:
              schema:
                type: string
                example : Failed to add product.                  

  /user:
    description: Add data to DB by sending user information.
    post:
      summary: Create User
      tags:
        - user
      parameters:
        - in: query
          description: Add data to DB by sending user information.
          name: register
          required: true
          schema:
            type: object
            properties:
              UserName:
                type: string
              UserID:
                type: string
              Password:
                type: string
              E-Mail:
                type: string
              
      responses:
        '201':
          description: Success Resopnse with path param
          content:
            application/json:
              schema:
                type: string     
                example: Alert Success to register.
                # Go to the 'Log-in' page.
        '400':
          description: Fail Resopnse with path param
          content:
            application/json:
              schema:
                type: string     
                example: 400 error. Fail to register.

  /user/login:
    description: Send the user's id and password to find out appropriate DB data.
    post:
      tags:
        - user
      summary: Login User
      parameters:
        - in: query
          description: Send the user's id and password to find out appropriate DB data.
          name: UserID, Password
          required: true
          schema:
            type: object
            properties:
              UserID:
                type: string
              Password: 
                type: string
          
      responses:
        '201':
          description: Success Resopnse with path param
          content:
            application/json:
              schema:
                properties:
                  UserID: 
                    type: string
                 
                # Send user id 
                # Alert Log-in is successful. 
                # Go to the 'Home' page.
        '400':
          description: Fail to Log-in.
          content:
            application/json:
              schema:
                type: string
                example: Fail to Log-in.


  /user/logout:
    description: Add data to DB by sending user information.
    post:
      tags:
        - user
      summary: Logout User
      parameters:
        - in: query
          description: Add data to DB by sending user information.
          name: register
          required: true
          schema:
            type: object
            properties:
              UserName:
                type: string
              UserID:
                type: string
              Password:
                type: string
              E-Mail:
                type: string
              
      responses:
        '201':
          description: Success Resopnse with path param
          content:
            application/json:
              schema:
                type: string     
                example: Alert Success to register.
                # Go to the 'Log-in' page.
        '400':
          description: Fail Resopnse with path param
          content:
            application/json:
              schema:
                type: string     
                example: 400 error. Fail to register.
                
  /user/carts:
    description: Reads and displays user's cart information.
    get:
      summary: Get the user's cart information
      tags:
        - user
      parameters:
        - in: query
          description: Reads and displays user's cart information.
          name: shopping cart
          required: true
          schema:
            type: object
      responses:
        '200':
          description: Success Resopnse with path param
          content:
            application/json:
              schema:
                $ref: './components/user.yaml'
                # get list of user cart from user db.
                
    put:
      tags:
        - user
      summary: Update the user's cart information
      parameters:
        - in: query
          description: Reads and displays user's cart information.
          name: shopping cart
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success Resopnse with path param
          content:
            application/json:
              schema:
                $ref: './components/user.yaml' 
                # change list of user cart from user db.
        '400' :
          description: Fail Resopnse with path param
          content:
            application/json:
              schema:
                type: string
                example: Fail to change data.


              
  

  /test:
    description: Add data to DB by sending product information.
    post:
      summary: RequestBody Test

      responses:
        '201':
          description: Success Resopnse with path param
      requestBody:
        $ref: '#/components/requestBodies/UserArray'

components:
  schemas:
    Product:
      $ref: './components/product.yaml' 
    user:
      $ref: './components/user.yaml' 
  requestBodies:
    Pet:
      content:
        application/json:
          schema:
            $ref: './components/user.yaml' 
        application/xml:
          schema:
            $ref: './components/user.yaml' 
      description: Pet object that needs to be added to the store
      required: true
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: './components/user.yaml' 
      description: List of user object zzz