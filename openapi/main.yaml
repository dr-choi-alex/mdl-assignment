openapi: '3.0.2'
info:
  title: MDL Assignment
  description: Shopping Mall Demo
  version: '1.0'
servers:
  - url: http://localhost:5000/#/
paths:
  /products:
    description: Product Information
    get:
      summary: Get the products in the store / main page
      tags:
        - products
      description: Get Products Information
           
      responses:
        '200':
          description: Success Resopnse
          content:
            application/json:
              schema:
                $ref: './components/products.yaml'
                    
    post:
      tags:
        - products
      summary: Add a new product to the store

      requestBody:
        description: Add data to DB by sending product information.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectID:
                  type: string
                ProductName:
                  type: string
                Price:
                  type: integer
                Image:
                  type: string

      responses:
        '201':
          description: Success Resopnse with path param
          content:
            application/json:
              schema:
                type: string
                example : Successfully added product.
                

        '400':
          description: Fail Resopnse with path param
          content:
            application/json:
              schema:
                type: string
                example : Failed to add product.                  

  /users:
    description: Add data to DB by sending user information.
    post:
      summary: Create User
      tags:
        - users

      requestBody:
        description: Add data to DB by sending user information.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserName:
                  type: string
                UserID:
                  type: string
                Password:
                  type: string
                E-Mail:
                  type: string

      responses:
        '201':
          description: Success Resopnse with path param
          content:
            application/json:
              schema:
                type: string     
                example: Alert Success to register.
                # Go to the 'Log-in' page.
        '400':
          description: Fail Resopnse with path param
          content:
            application/json:
              schema:
                type: string     
                example: 400 error. Fail to register.

  /users/{userId}:
    description: User information
    get:
      summary: Get the user detail information
      tags:
        - users
      parameters:
        - name: "userId"
          required: true
          in: "path"
          description: The id of the user to retrieve
          schema:
            type: string
           
      responses:
        '200':
          description: Success Resopnse
          content:
            application/json:
              schema:
                $ref: './components/user.yaml' 

  /users/{userId}/Carts:
    description: the user cart information
    get:
      summary: Get the user's cart information
      tags:
        - users
      parameters:
        - name: userId
          required: true
          in: path
          description: Reads and displays user's cart information.
          schema:
            type: integer
           
      responses:
        '200':
          description: Success Resopnse
          content:
            application/json:
              schema:
                $ref: './components/carts.yaml' 
    post:
      parameters:
      - description: add product info to user's cart 
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
      requestBody:
        description: delete the user's cart item
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectID:
                  type: integer
                Quantity:
                  type: integer
      responses:
        "200":
          description: Success Resopnse with path param
        "400":
          content:
            application/json:
              schema:
                example: Fail to change data.
                type: string
          description: Fail Resopnse with path param
      summary: add the user's cart item
      tags:
      - users
    put:
      tags:
        - users
      summary: Update the user's cart information
      parameters:
        - name: userId
          required: true
          in: path
          description: Reads and displays user's cart information.
          schema:
            type: integer
      responses:
        '200':
          description: Success Resopnse with path param
        '400':
          description: Fail Resopnse with path param
          content:
            application/json:
              schema:
                type: string
                example: Fail to change data.
    
    delete:
      tags: 
        - users
      summary: delete the user's cart item
      parameters:
      - description: Reads and displays user's cart information.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
      requestBody:
        description: delete the user's cart item
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectID:
                  type: integer
      responses:
        "200":
          description: Success Resopnse with path param
        "400":
          content:
            application/json:
              schema:
                example: Fail to delete data.
                type: string
          description: Fail Resopnse with path param
      
  /signin:
    description: Send the user's id and password to find out appropriate DB data.
    post:
      tags:
        - sign
      summary: Login User
      requestBody:
        description: Send the user's id and password to find out appropriate DB data.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserID:
                  type: string
                Password: 
                  type: string

      responses:
        '201':
          description: Success Resopnse with path param
          content:
            application/json:
              schema:
                properties:
                  UserID: 
                    type: string
                 
                # Send user id 
                # Alert Log-in is successful. 
                # Go to the 'Home' page.
        '400':
          description: Fail to Log-in.
          content:
            application/json:
              schema:
                type: string
                example: Fail to Log-in.


  /signout:
    description: Add data to DB by sending user information.
    post:
      tags:
        - sign
      summary: Logout User

      requestBody:
        description: Add data to DB by sending user information.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserName:
                  type: string
                UserID:
                  type: string
                Password:
                  type: string
                E-Mail:
                  type: string

      responses:
        '201':
          description: Success Resopnse with path param
          content:
            application/json:
              schema:
                type: string     
                example: Alert Success to register.
                # Go to the 'Log-in' page.
        '400':
          description: Fail Resopnse with path param
          content:
            application/json:
              schema:
                type: string     
                example: 400 error. Fail to register.

  /signup:
    description: Add data to DB by sending user information.
    post:
      tags:
        - sign
      summary: Logout User

      requestBody:
        description: Add data to DB by sending user information.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserName:
                  type: string
                UserID:
                  type: string
                Password:
                  type: string
                E-Mail:
                  type: string

      responses:
        '201':
          description: Success Resopnse with path param
          content:
            application/json:
              schema:
                type: string     
                example: Alert Success to register.
                # Go to the 'Log-in' page.
        '400':
          description: Fail Resopnse with path param
          content:
            application/json:
              schema:
                type: string     
                example: 400 error. Fail to register.